import { IQCallback1, IQCallback2 } from '../defs';
export declare const every: <T>(...checkers: Array<Function>) => (item: T) => boolean;
export declare const some: <T>(...checkers: Array<Function>) => (item: T) => boolean;
export declare const compose: <T>(msg: string, checker: (it: T) => boolean) => (item: T) => T;
export declare const isRequired: (item: any) => (item: unknown) => unknown;
export declare const isReqString: (item: any) => (item: unknown) => unknown;
export declare const isReqNumber: (item: any) => (item: unknown) => unknown;
export declare const isReqBoolean: (item: any) => (item: unknown) => unknown;
export declare const isReqJson: (item: any) => (item: unknown) => unknown;
export declare const isReqArrayNumber: (item: any) => (item: unknown) => unknown;
export declare const isReqArrayString: (item: any) => (item: unknown) => unknown;
export declare const isReqArrayOfStringOrNumber: (item: any) => (item: unknown) => unknown;
export declare const isOptArrayNumber: (item: any) => (item: unknown) => unknown;
export declare const isOptArrayString: (item: any) => (item: unknown) => unknown;
export declare const isOptString: (item: any) => (item: unknown) => unknown;
export declare const isOptNumber: (item: any) => (item: unknown) => unknown;
export declare const isOptJson: (item: any) => (item: unknown) => unknown;
export declare const isOptCallback: (item: any) => (item: unknown) => unknown;
export declare const isOptBoolean: (item: any) => (item: unknown) => unknown;
export declare function isArrayOfNumber(ids: number[] | string[]): ids is number[];
export declare function isArrayOfString(ids: number[] | string[]): ids is string[];
export declare function isCallback1<T = unknown>(cb: IQCallback1 | IQCallback2<T>): cb is IQCallback1;
export declare function isCallback2<T = unknown>(cb: IQCallback1 | IQCallback2<T>): cb is IQCallback2<T>;
